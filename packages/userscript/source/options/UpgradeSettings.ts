import { difference } from "../tools/Array";
import { cwarn } from "../tools/Log";
import { GamePage, Upgrade } from "../types";
import { Setting } from "./Settings";
import { SettingsSection } from "./SettingsSection";

export class UpgradeSettings extends SettingsSection {
  items: {
    [item in Upgrade]: Setting;
  } = {
    advancedAutomation: new Setting(true),
    advancedRefinement: new Setting(true),
    aiBases: new Setting(true),
    aiEngineers: new Setting(true),
    alloyArmor: new Setting(true),
    alloyAxe: new Setting(true),
    alloyBarns: new Setting(true),
    alloySaw: new Setting(true),
    alloyWarehouses: new Setting(true),
    amBases: new Setting(true),
    amDrive: new Setting(true),
    amFission: new Setting(true),
    amReactors: new Setting(true),
    amReactorsMK2: new Setting(true),
    assistance: new Setting(true),
    astrolabe: new Setting(true),
    astrophysicists: new Setting(true),
    augumentation: new Setting(true),
    automatedPlants: new Setting(true),
    barges: new Setting(true),
    biofuel: new Setting(true),
    bolas: new Setting(true),
    cadSystems: new Setting(true),
    caravanserai: new Setting(true),
    carbonSequestration: new Setting(true),
    cargoShips: new Setting(true),
    celestialMechanics: new Setting(true),
    chronoEngineers: new Setting(true),
    chronoforge: new Setting(true),
    coalFurnace: new Setting(true),
    coldFusion: new Setting(true),
    combustionEngine: new Setting(true),
    compositeBow: new Setting(true),
    concreteBarns: new Setting(true),
    concreteHuts: new Setting(true),
    concreteWarehouses: new Setting(true),
    crossbow: new Setting(true),
    cryocomputing: new Setting(true),
    darkEnergy: new Setting(true),
    deepMining: new Setting(true),
    distorsion: new Setting(true),
    electrolyticSmelting: new Setting(true),
    eludiumCracker: new Setting(true),
    eludiumHuts: new Setting(true),
    eludiumReflectors: new Setting(true),
    energyRifts: new Setting(true),
    enrichedThorium: new Setting(true),
    enrichedUranium: new Setting(true),
    factoryAutomation: new Setting(true),
    factoryLogistics: new Setting(true),
    factoryOptimization: new Setting(true),
    factoryProcessing: new Setting(true),
    factoryRobotics: new Setting(true),
    fluidizedReactors: new Setting(true),
    fluxCondensator: new Setting(true),
    fuelInjectors: new Setting(true),
    geodesy: new Setting(true),
    gmo: new Setting(true),
    goldOre: new Setting(true),
    hubbleTelescope: new Setting(true),
    huntingArmor: new Setting(true),
    hydroPlantTurbines: new Setting(true),
    internet: new Setting(true),
    invisibleBlackHand: new Setting(true),
    ironAxes: new Setting(true),
    ironHoes: new Setting(true),
    ironwood: new Setting(true),
    lhc: new Setting(true),
    logistics: new Setting(true),
    longRangeSpaceships: new Setting(true),
    machineLearning: new Setting(true),
    mineralAxes: new Setting(true),
    mineralHoes: new Setting(true),
    miningDrill: new Setting(true),
    mWReactor: new Setting(true),
    nanosuits: new Setting(true),
    neuralNetworks: new Setting(true),
    nuclearPlants: new Setting(true),
    nuclearSmelters: new Setting(true),
    offsetPress: new Setting(true),
    oilDistillation: new Setting(true),
    oilRefinery: new Setting(true),
    orbitalGeodesy: new Setting(true),
    oxidation: new Setting(true),
    photolithography: new Setting(true),
    photovoltaic: new Setting(true),
    pneumaticPress: new Setting(true),
    printingPress: new Setting(true),
    pumpjack: new Setting(true),
    pyrolysis: new Setting(true),
    qdot: new Setting(true),
    railgun: new Setting(true),
    reactorVessel: new Setting(true),
    refrigeration: new Setting(true),
    register: new Setting(true),
    reinforcedBarns: new Setting(true),
    reinforcedSaw: new Setting(true),
    reinforcedWarehouses: new Setting(true),
    relicStation: new Setting(true),
    rotaryKiln: new Setting(true),
    satelliteRadio: new Setting(true),
    satnav: new Setting(true),
    seti: new Setting(true),
    silos: new Setting(true),
    solarSatellites: new Setting(true),
    spaceEngineers: new Setting(true),
    spaceManufacturing: new Setting(true),
    spiceNavigation: new Setting(true),
    starlink: new Setting(true),
    stasisChambers: new Setting(true),
    steelArmor: new Setting(true),
    steelAxe: new Setting(true),
    steelPlants: new Setting(true),
    steelSaw: new Setting(true),
    stoneBarns: new Setting(true),
    storageBunkers: new Setting(true),
    strenghtenBuild: new Setting(true),
    tachyonAccelerators: new Setting(true),
    thinFilm: new Setting(true),
    thoriumEngine: new Setting(true),
    thoriumReactors: new Setting(true),
    titaniumAxe: new Setting(true),
    titaniumBarns: new Setting(true),
    titaniumMirrors: new Setting(true),
    titaniumSaw: new Setting(true),
    titaniumWarehouses: new Setting(true),
    turnSmoothly: new Setting(true),
    unicornSelection: new Setting(true),
    unobtainiumAxe: new Setting(true),
    unobtainiumDrill: new Setting(true),
    unobtainiumHuts: new Setting(true),
    unobtainiumReflectors: new Setting(true),
    unobtainiumSaw: new Setting(true),
    uplink: new Setting(true),
    voidAspiration: new Setting(true),
    voidEnergy: new Setting(true),
    voidReactors: new Setting(true),
  };

  static validateGame(game: GamePage, settings: UpgradeSettings) {
    const inSettings = Object.keys(settings.items);
    const inGame = game.workshop.upgrades.map(upgrade => upgrade.name);

    const missingInSettings = difference(inGame, inSettings);
    const redundantInSettings = difference(inSettings, inGame);

    for (const upgrade of missingInSettings) {
      cwarn(`The workshop upgrade '${upgrade}' is not tracked in Kitten Scientists!`);
    }
    for (const upgrade of redundantInSettings) {
      cwarn(`The workshop upgrade '${upgrade}' is not an upgrade in Kitten Game!`);
    }
  }
}
